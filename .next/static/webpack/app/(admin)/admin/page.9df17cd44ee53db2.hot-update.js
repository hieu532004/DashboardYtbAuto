"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/(admin)/admin/page",{

/***/ "(app-pages-browser)/./lib/api.ts":
/*!********************!*\
  !*** ./lib/api.ts ***!
  \********************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   API_BASE: function() { return /* binding */ API_BASE; },\n/* harmony export */   apiGet: function() { return /* binding */ apiGet; },\n/* harmony export */   apiPost: function() { return /* binding */ apiPost; },\n/* harmony export */   authHeaders: function() { return /* binding */ authHeaders; }\n/* harmony export */ });\nconst API_BASE = (\"https://localhost:52308\" || 0).replace(/\\/$/, \"\");\nfunction authHeaders() {\n    const token =  true ? localStorage.getItem(\"admin_jwt\") : 0;\n    return token ? {\n        Authorization: \"Bearer \".concat(token)\n    } : {};\n}\nasync function handle(res) {\n    if (!res.ok) {\n        const body = await res.text();\n        throw {\n            status: res.status,\n            body\n        };\n    }\n    const text = await res.text();\n    if (!text) return undefined;\n    try {\n        return JSON.parse(text);\n    } catch (e) {\n        return text;\n    }\n}\nasync function apiGet(path) {\n    const url = \"\".concat(API_BASE).concat(path.startsWith(\"/\") ? path : \"/\" + path);\n    const res = await fetch(url, {\n        headers: {\n            ...authHeaders()\n        },\n        cache: \"no-store\"\n    });\n    return handle(res);\n}\nasync function apiPost(path, body) {\n    const url = \"\".concat(API_BASE).concat(path.startsWith(\"/\") ? path : \"/\" + path);\n    console.log(\"[apiPost]\", url); // pháº£i in: https://localhost:52308/api/...\n    const res = await fetch(url, {\n        method: \"POST\",\n        headers: {\n            \"Content-Type\": \"application/json\",\n            ...authHeaders()\n        },\n        body: body ? JSON.stringify(body) : undefined\n    });\n    return handle(res);\n}\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL2xpYi9hcGkudHMiLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUFPLE1BQU1BLFdBQVcsQ0FBQ0MseUJBQWdDLElBQUksQ0FBQyxFQUFHRyxPQUFPLENBQUMsT0FBTyxJQUFJO0FBSTdFLFNBQVNDO0lBQ2QsTUFBTUMsUUFBUSxLQUFrQixHQUFjQyxhQUFhQyxPQUFPLENBQUMsZUFBZSxDQUFJO0lBQ3RGLE9BQU9GLFFBQVE7UUFBRUcsZUFBZSxVQUFnQixPQUFOSDtJQUFRLElBQUksQ0FBQztBQUN6RDtBQUdBLGVBQWVJLE9BQVVDLEdBQWE7SUFDcEMsSUFBSSxDQUFDQSxJQUFJQyxFQUFFLEVBQUU7UUFDWCxNQUFNQyxPQUFPLE1BQU1GLElBQUlHLElBQUk7UUFDM0IsTUFBTTtZQUFFQyxRQUFRSixJQUFJSSxNQUFNO1lBQUVGO1FBQUs7SUFDbkM7SUFDQSxNQUFNQyxPQUFPLE1BQU1ILElBQUlHLElBQUk7SUFDM0IsSUFBSSxDQUFDQSxNQUFNLE9BQU9FO0lBQ2xCLElBQUk7UUFBRSxPQUFPQyxLQUFLQyxLQUFLLENBQUNKO0lBQVksRUFBRSxVQUFNO1FBQUUsT0FBUUE7SUFBdUI7QUFDL0U7QUFFTyxlQUFlSyxPQUFVQyxJQUFZO0lBQzFDLE1BQU1DLE1BQU0sR0FBY0QsT0FBWHBCLFVBQWtELE9BQXZDb0IsS0FBS0UsVUFBVSxDQUFDLE9BQU9GLE9BQU8sTUFBSUE7SUFDNUQsTUFBTVQsTUFBTSxNQUFNWSxNQUFNRixLQUFLO1FBQUVHLFNBQVM7WUFBRSxHQUFHbkIsYUFBYTtRQUFDO1FBQUlvQixPQUFPO0lBQVc7SUFDakYsT0FBT2YsT0FBVUM7QUFDbkI7QUFFTyxlQUFlZSxRQUFXTixJQUFZLEVBQUVQLElBQVU7SUFDdkQsTUFBTVEsTUFBTSxHQUFjRCxPQUFYcEIsVUFBb0QsT0FBekNvQixLQUFLRSxVQUFVLENBQUMsT0FBT0YsT0FBTyxNQUFNQTtJQUM5RE8sUUFBUUMsR0FBRyxDQUFDLGFBQWFQLE1BQU0sMkNBQTJDO0lBQzFFLE1BQU1WLE1BQU0sTUFBTVksTUFBTUYsS0FBSztRQUMzQlEsUUFBUTtRQUNSTCxTQUFTO1lBQUUsZ0JBQWdCO1lBQW9CLEdBQUduQixhQUFhO1FBQUM7UUFDaEVRLE1BQU1BLE9BQU9JLEtBQUthLFNBQVMsQ0FBQ2pCLFFBQVFHO0lBQ3RDO0lBQ0EsT0FBT04sT0FBVUM7QUFDbkIiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbGliL2FwaS50cz82OGExIl0sInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCBjb25zdCBBUElfQkFTRSA9IChwcm9jZXNzLmVudi5ORVhUX1BVQkxJQ19BUElfQkFTRSB8fCAnJykucmVwbGFjZSgvXFwvJC8sICcnKTtcblxuZXhwb3J0IHR5cGUgQXBpRXJyb3IgPSB7IHN0YXR1czogbnVtYmVyOyBib2R5OiBzdHJpbmcgfTtcblxuZXhwb3J0IGZ1bmN0aW9uIGF1dGhIZWFkZXJzKCk6IFJlY29yZDxzdHJpbmcsIHN0cmluZz4ge1xuICBjb25zdCB0b2tlbiA9IHR5cGVvZiB3aW5kb3cgIT09ICd1bmRlZmluZWQnID8gbG9jYWxTdG9yYWdlLmdldEl0ZW0oJ2FkbWluX2p3dCcpIDogbnVsbDtcbiAgcmV0dXJuIHRva2VuID8geyBBdXRob3JpemF0aW9uOiBgQmVhcmVyICR7dG9rZW59YCB9IDoge307XG59XG5cblxuYXN5bmMgZnVuY3Rpb24gaGFuZGxlPFQ+KHJlczogUmVzcG9uc2UpOiBQcm9taXNlPFQ+IHtcbiAgaWYgKCFyZXMub2spIHtcbiAgICBjb25zdCBib2R5ID0gYXdhaXQgcmVzLnRleHQoKTtcbiAgICB0aHJvdyB7IHN0YXR1czogcmVzLnN0YXR1cywgYm9keSB9IGFzIEFwaUVycm9yO1xuICB9XG4gIGNvbnN0IHRleHQgPSBhd2FpdCByZXMudGV4dCgpO1xuICBpZiAoIXRleHQpIHJldHVybiB1bmRlZmluZWQgYXMgVDtcbiAgdHJ5IHsgcmV0dXJuIEpTT04ucGFyc2UodGV4dCkgYXMgVDsgfSBjYXRjaCB7IHJldHVybiAodGV4dCBhcyB1bmtub3duKSBhcyBUOyB9XG59XG5cbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBhcGlHZXQ8VD4ocGF0aDogc3RyaW5nKSB7XG4gIGNvbnN0IHVybCA9IGAke0FQSV9CQVNFfSR7cGF0aC5zdGFydHNXaXRoKCcvJykgPyBwYXRoIDogJy8nK3BhdGh9YDtcbiAgY29uc3QgcmVzID0gYXdhaXQgZmV0Y2godXJsLCB7IGhlYWRlcnM6IHsgLi4uYXV0aEhlYWRlcnMoKSB9ICwgY2FjaGU6ICduby1zdG9yZScgfSk7XG4gIHJldHVybiBoYW5kbGU8VD4ocmVzKTtcbn1cblxuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIGFwaVBvc3Q8VD4ocGF0aDogc3RyaW5nLCBib2R5PzogYW55KSB7XG4gIGNvbnN0IHVybCA9IGAke0FQSV9CQVNFfSR7cGF0aC5zdGFydHNXaXRoKCcvJykgPyBwYXRoIDogJy8nICsgcGF0aH1gO1xuICBjb25zb2xlLmxvZygnW2FwaVBvc3RdJywgdXJsKTsgLy8gcGjhuqNpIGluOiBodHRwczovL2xvY2FsaG9zdDo1MjMwOC9hcGkvLi4uXG4gIGNvbnN0IHJlcyA9IGF3YWl0IGZldGNoKHVybCwge1xuICAgIG1ldGhvZDogJ1BPU1QnLFxuICAgIGhlYWRlcnM6IHsgJ0NvbnRlbnQtVHlwZSc6ICdhcHBsaWNhdGlvbi9qc29uJywgLi4uYXV0aEhlYWRlcnMoKSB9LFxuICAgIGJvZHk6IGJvZHkgPyBKU09OLnN0cmluZ2lmeShib2R5KSA6IHVuZGVmaW5lZCxcbiAgfSk7XG4gIHJldHVybiBoYW5kbGU8VD4ocmVzKTtcbn1cbiJdLCJuYW1lcyI6WyJBUElfQkFTRSIsInByb2Nlc3MiLCJlbnYiLCJORVhUX1BVQkxJQ19BUElfQkFTRSIsInJlcGxhY2UiLCJhdXRoSGVhZGVycyIsInRva2VuIiwibG9jYWxTdG9yYWdlIiwiZ2V0SXRlbSIsIkF1dGhvcml6YXRpb24iLCJoYW5kbGUiLCJyZXMiLCJvayIsImJvZHkiLCJ0ZXh0Iiwic3RhdHVzIiwidW5kZWZpbmVkIiwiSlNPTiIsInBhcnNlIiwiYXBpR2V0IiwicGF0aCIsInVybCIsInN0YXJ0c1dpdGgiLCJmZXRjaCIsImhlYWRlcnMiLCJjYWNoZSIsImFwaVBvc3QiLCJjb25zb2xlIiwibG9nIiwibWV0aG9kIiwic3RyaW5naWZ5Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./lib/api.ts\n"));

/***/ })

});